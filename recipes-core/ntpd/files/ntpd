#! /bin/sh
### BEGIN INIT INFO
# Provides:          ntpd
# Required-Start:    $local_fs $network
# Required-Stop:     $local_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: NTP (Network Time Protocol) Daemon
# Description:       Start the NTP daemon which synchronizes the system clock
#                    with a reference time source.
### END INIT INFO

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="NTP Daemon"
NAME="ntpd"
DAEMON=/usr/sbin/$NAME
DAEMON_ARGS="-u ntp:ntp -p /var/run/ntpd.pid -g -c /etc/ntp.conf"  # Specify ntpd arguments
PIDFILE=/var/run/$NAME.pid

. /etc/init.d/functions || exit 1

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

do_start() {
    local status pid

    status=0
    pid=`pidofproc $NAME` || status=$?
    case $status in
    0)
        echo "$DESC already running ($pid)."
        exit 1
        ;;
    *)
        echo "Starting $DESC ..."
        exec $DAEMON $DAEMON_ARGS >/dev/null 2>&1 || status=$?
        echo "ERROR: Failed to start $DESC."
        exit $status
        ;;
    esac
}

do_stop() {
    local pid status

    status=0
    pid=`pidofproc $NAME` || status=$?
    case $status in
    0)
        # Exit when fail to stop, the kill would complain when fail
        kill -s 15 $pid >/dev/null && rm -f $PIDFILE && \
            echo "Stopped $DESC ($pid)." || exit $?
        ;;
    *)
        echo "$DESC is not running; none killed." >&2
        ;;
    esac
    return $status
}

status_of_proc() {
    local pid status

    status=0
    pid=`pidofproc $NAME` || status=$?
    case $status in
    0)
        echo "$DESC is running ($pid)."
        exit 0
        ;;
    *)
        echo "$DESC is not running." >&2
        exit $status
        ;;
    esac
}

case "$1" in
start)
    do_start
    ;;
stop)
    do_stop || exit $?
    ;;
status)
    status_of_proc
    ;;
restart)
    # Always start the service regardless the status of do_stop
    do_stop
    do_start
    ;;
*)
    echo "Usage: $0 {start|stop|status|restart}" >&2
    exit 3
    ;;
esac
